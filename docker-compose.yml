services:
  ffxiv-server:
    build:
      dockerfile_inline: |
        FROM rust:1.72.1
        RUN apt-get update && apt-get install -y lld && rm -rf /var/lib/apt/lists/*
    working_dir: /crates
    command: [ "./startup.sh" ]
    ports: [ "3001:3001" ]
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3001/v1/health"]
      interval: 10s
      timeout: 10s
      retries: 120
      start_period: 10s
    environment:
      - RUSTFLAGS=-C link-arg=-fuse-ld=lld
      - CARGO_INCREMENTAL=true
      - FFXIV_DATA_CENTERS=Dynamis
      - FFXIV_ITEM_DB_CONN=mysql://user:password@ffxiv-items-db:3306/ffxiv_items
    depends_on:
      ffxiv-items-db:
        condition: service_healthy
    volumes:
      - ./crates:/crates

  ffxiv-items-db:
    image: mysql:8.0
    ports: ["3306:3306"]
    restart: always
    command: ["--general_log=1", "--general_log_file=/opt/mysql_logs/mysql.log"]
    environment:
      MYSQL_ROOT_PASSWORD: "password"
      MYSQL_USER: "user"
      MYSQL_PASSWORD: "password"
      MYSQL_DATABASE: "ffxiv_items"
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
    # volumes:
    #   - ./crates/_artifacts:/opt/mysql_logs

  nextjs-server:
    image: node:20
    working_dir: /nextjs
    command: [ "./startup.sh" ]
    ports: [ "3000:3000" ]
    # depends_on:
    #   ffxiv-server:
    #     condition: service_healthy
    volumes:
      - ./frontend/src-nextjs:/nextjs
      - /nextjs/node_modules/

  # http-server:
  #   image: httpd:2.4
  #   ports: [ "8080:80" ]
  #   depends_on:
  #     typescript-watch:
  #       condition: service_started
  #       required: false
  #     ffxiv-server:
  #       condition: service_healthy
  #   volumes:
  #     - ./frontend/src-js:/usr/local/apache2/htdocs/

  # typescript-watch:
  #   image: mcr.microsoft.com/devcontainers/typescript-node:20
  #   working_dir: /src-ts
  #   command: [ "tsc", "--watch" ]
  #   depends_on:
  #     typescript-init:
  #       condition: service_completed_successfully
  #   profiles: [ watch ]
  #   volumes:
  #     - ./frontend/src-ts:/src-ts
  #     - ./frontend/src-js:/src-js

  # typescript-init:
  #   image: mcr.microsoft.com/devcontainers/typescript-node:20
  #   working_dir: /src-ts
  #   command: [ "./startup.sh" ]
  #   volumes:
  #     - ./frontend/src-ts:/src-ts
  #     - ./frontend/src-js:/src-js
